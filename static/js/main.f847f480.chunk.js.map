{"version":3,"sources":["components/Timer.jsx","App.jsx","index.js"],"names":["Timer","timeStart","step","onTick","autostart","infiniti","useState","time","setTime","pause","setPause","repetition","setRepetition","useEffect","interval","setInterval","prev","clearInterval","Math","floor","slice","onClick","App","console","log","className","ReactDOM","render","document","getElementById"],"mappings":"wKAsEeA,EApED,SAAC,GAAuD,IAArDC,EAAoD,EAApDA,UAAWC,EAAyC,EAAzCA,KAAOC,EAAkC,EAAlCA,OAAQC,EAA0B,EAA1BA,UAAYC,EAAc,EAAdA,SACnD,EAAwBC,mBAASL,GAAjC,mBAAOM,EAAP,KAAaC,EAAb,KACA,EAA0BF,oBAAUF,GAApC,mBAAOK,EAAP,KAAcC,EAAd,KACA,EAAoCJ,mBAASD,GAA7C,mBAAOM,EAAP,KAAmBC,EAAnB,KAqDA,OAjCAC,qBAAU,WACN,GAAGF,GACC,IAAIF,EAAO,CACP,IAAMK,EAAWC,aAAY,WACzBP,GAAQ,SAACQ,GACH,OAAIA,EAAO,EACAA,EAAOd,EAEAD,KAGtBE,EAAOI,KACPL,GAEH,OAAO,kBAAMe,cAAcH,UAIlC,IAAIL,EAAO,CACP,IAAMK,EAAWC,aAAY,WAC1BP,GAAQ,SAACQ,GAAD,OAAUA,EAAOd,KACzBC,EAAOI,KACPL,GAIH,OAHY,IAATK,GACDG,GAAS,GAEJ,kBAAMO,cAAcH,OAGnC,CAACP,EAAME,EAAOE,IAKd,gCACI,gCAAM,WAAIO,KAAKC,MAAMZ,EAAO,IAAO,KAAMa,OAAO,GAAhD,IAAqD,WAAIb,EAAO,IAAO,IAAKa,OAAO,MACnF,wBAAQC,QAAS,kBAAMX,GAAS,IAAhC,mBACA,wBAAQW,QAAS,kBAAMX,GAAS,IAAhC,kBACA,wBAAQW,QAxDS,WACrBX,GAAUN,GACVI,EAAQP,IAsDJ,mBACA,wBAAQoB,QApDU,WACnBV,GACCC,GAAc,GACdJ,EAAQP,GACRS,GAAS,KAGTE,GAAc,GACdJ,EAAQP,GACRS,GAAS,KA2CT,+BCvCGY,MAjBf,WAEI,IAMMnB,EAAO,SAACI,GAAD,OAAUgB,QAAQC,IAAI,0FAAsBjB,EAAK,MAC9D,OACI,sBAAKkB,UAAU,MAAf,UACI,cAAC,EAAD,CAAOxB,UATK,IASmBC,KAPxB,IAOsCE,UALnC,KAK0DD,OAAQA,EAAQE,SAJ3E,QAKT,cAAC,EAAD,CAAOJ,UATK,IASmBC,KAPxB,IAOsCE,UANnC,KAM2DD,OAAQA,EAASE,SAL7E,YCTrBqB,IAASC,OAAO,cAAC,EAAD,IACdC,SAASC,eAAe,U","file":"static/js/main.f847f480.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { useEffect, useState } from 'react';\r\nconst Timer = ({ timeStart, step , onTick, autostart , infiniti}) => {\r\n    const [time, setTime] = useState(timeStart);\r\n    const [pause, setPause] = useState(!autostart);\r\n    const [repetition, setRepetition] = useState(infiniti);\r\n\r\n    const handleResetTimer = () => {\r\n        setPause(!autostart)\r\n        setTime(timeStart);\r\n    }\r\n   \r\n    const handleRepeatTimer = () => {\r\n        if(repetition){\r\n            setRepetition(false)\r\n            setTime(timeStart)\r\n            setPause(false)\r\n            \r\n        }else{\r\n            setRepetition(true)\r\n            setTime(timeStart);\r\n            setPause(false)\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        if(repetition){\r\n            if(!pause) {\r\n                const interval = setInterval(() => {\r\n                    setTime((prev) => {\r\n                          if (prev > 0) {\r\n                              return prev - step\r\n                          }else {\r\n                              return prev = timeStart;\r\n                          }\r\n                      })\r\n                      onTick(time)\r\n                   }, step)\r\n                   \r\n                   return () => clearInterval(interval)  \r\n        }\r\n            \r\n        }else{\r\n            if(!pause) {\r\n                const interval = setInterval(() => {\r\n                   setTime((prev) => prev - step)\r\n                   onTick(time)\r\n                }, step)\r\n                if(time === 0) {\r\n                  setPause(true)\r\n                }\r\n                return () => clearInterval(interval)\r\n        }\r\n        \r\n     }},[time, pause, repetition ])\r\n \r\n\r\n\r\n    return (\r\n        <div>\r\n            <div>{`0${Math.floor(time / 1000 / 60)}`.slice(-2)}:{`0${time / 1000 % 60}`.slice(-2)}</div>\r\n            <button onClick={() => setPause(false)}>Start</button>\r\n            <button onClick={() => setPause(true)}>Stop</button>\r\n            <button onClick={handleResetTimer}>Reset</button>\r\n            <button onClick={handleRepeatTimer}>Repeat on/off</button>\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default Timer","import React from 'react';\r\nimport Timer from './components/Timer';\r\n\r\n\r\n\r\n\r\n \r\n\r\nfunction App() {\r\n\r\n    const timeStart_1 = 1000 * 10;\r\n    const timeStart_2 = 1000 * 20;\r\n    const step_1 = 1000\r\n    const step_2 = 2000\r\n    const autostart = true;\r\n    const infiniti = false;\r\n    const onTick=(time) => console.log(\"Залишилось часу: \" + time/1000)\r\n    return (\r\n        <div className=\"App\">\r\n            <Timer timeStart={timeStart_1} step={step_1} autostart ={autostart} onTick={onTick} infiniti={infiniti} />\r\n            <Timer timeStart={timeStart_2} step={step_2} autostart ={autostart}  onTick={onTick}  infiniti={infiniti} />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(<App />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}
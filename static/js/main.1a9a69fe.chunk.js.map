{"version":3,"sources":["App.jsx","index.js"],"names":["timerId","Timer","timeStart","step","autostart","useState","time","setTime","pause","setPause","useEffect","console","log","clearInterval","setInterval","prev","Math","floor","slice","onClick","App","className","ReactDOM","render","document","getElementById"],"mappings":"4HAGIA,E,4CACEC,EAAQ,SAAC,GAAmC,IAAjCC,EAAgC,EAAhCA,UAAWC,EAAqB,EAArBA,KACxB,GAD6C,EAAfC,UACNC,mBAASH,IAAjC,mBAAOI,EAAP,KAAaC,EAAb,KACA,EAA0BF,oBAAS,GAAnC,mBAAOG,EAAP,KAAcC,EAAd,KA0BA,OAxBAC,qBAAU,WAEN,GAAKF,EAgBD,OADAG,QAAQC,IAAI,qFACLC,cAAcb,GAfrBW,QAAQC,IAAI,0FACZZ,EAAUc,aAAY,WAClBP,GAAQ,SAACQ,GACL,OAAIA,EAAO,GACPJ,QAAQC,IAAR,iGAAgCG,EAAO,IAAvC,wBACOA,EAAOZ,IAGdQ,QAAQC,IAAI,2DACEV,QAGvBC,KAMR,CAACK,IAIA,gCACI,gCAAM,WAAIQ,KAAKC,MAAMX,EAAO,IAAO,KAAMY,OAAO,GAAhD,IAAqD,WAAIZ,EAAO,IAAO,IAAKY,OAAO,MACnF,wBAAQC,QAAS,kBAAMV,GAAS,IAAhC,mBACA,wBAAQU,QAAS,kBAAMV,GAAS,IAAhC,kBACA,wBAAQU,QAAS,kBAAMZ,EAAQL,IAA/B,uBAqBGkB,MAff,WAOI,OACI,sBAAKC,UAAU,MAAf,UACI,cAAC,EAAD,CAAOnB,UAPK,IAOmBC,KALxB,IAKsCC,UAHlC,OAIX,cAAC,EAAD,CAAOF,UAPK,IAOmBC,KALxB,IAKsCC,UAJlC,WC3CvBkB,IAASC,OAAO,cAAC,EAAD,IACdC,SAASC,eAAe,U","file":"static/js/main.1a9a69fe.chunk.js","sourcesContent":["import React from 'react';\r\nimport { useEffect, useState } from 'react';\r\n\r\nlet timerId\r\nconst Timer = ({ timeStart, step ,autostart}) => {\r\n    const [time, setTime] = useState(timeStart);\r\n    const [pause, setPause] = useState(false);\r\n\r\n    useEffect(() => {\r\n    \r\n        if (!pause) {\r\n            console.log(\"Таймер запущено!\");\r\n            timerId = setInterval(() => {\r\n                setTime((prev) => {\r\n                    if (prev > 0) {\r\n                        console.log(`Залишилось часу: ${prev / 1000} сек`);\r\n                        return prev - step\r\n                    }\r\n                     else {\r\n                        console.log(\"Час вийшов\");\r\n                        return prev = timeStart;\r\n                    }\r\n                })\r\n            }, step)\r\n        } else {\r\n            console.log(\"Таймер на паузі!\")\r\n            return clearInterval(timerId)\r\n        }\r\n      \r\n    }, [pause])\r\n\r\n\r\n    return (\r\n        <div>\r\n            <div>{`0${Math.floor(time / 1000 / 60)}`.slice(-2)}:{`0${time / 1000 % 60}`.slice(-2)}</div>\r\n            <button onClick={() => setPause(false)}>Start</button>\r\n            <button onClick={() => setPause(true)}>Stop</button>\r\n            <button onClick={() => setTime(timeStart)}>Reset</button>\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nfunction App() {\r\n\r\n    const timeStart_1 = 1000 * 10;\r\n    const timeStart_2 = 1000 * 20;\r\n    const step_1 = 1000\r\n    const step_2 = 2000\r\n     const autostart = true;\r\n    return (\r\n        <div className=\"App\">\r\n            <Timer timeStart={timeStart_1} step={step_1} autostart ={autostart} />\r\n            <Timer timeStart={timeStart_2} step={step_2} autostart ={autostart} />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(<App />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}